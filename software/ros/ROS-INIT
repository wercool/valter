Valter ROS demo
=============================================LEVEL 1
1) Turn on WiFi "valterstation2.4GHz"
2) Turn on Valter
   (otional) 2.1) ping 192.168.101.101
   (otional) 2.2) ssh 192.168.101.101
3) valter1 (ssh 192.168.101.101)
   3.1) sudo hciconfig hci0 piscan
	    (reminder) 3.0) cat ~/.bashrc
	    (otional)  3.10) cd ~/git/valter/software/ros/workspaces/valter1
	    (otional)  3.20) source devel/setup.sh
   3.2) (optional) sudo bluetoothctl
   3.2.0) (optional) systemctl status bluetooth
      3.2.1) LEVEL 2
4) (optional) ROS master (ROS_MASTER_URI=http://192.168.0.100:11311)
   (reminder) 4.0) cat ~/.bashrc
   (otional)  4.10) cd ~/git/valter/software/ros/workspaces/master
   (otional)  4.20) source devel/setup.sh
 5) (optional) ROS master (ROS_MASTER_URI=http://192.168.0.100:11311)
   5.10) (ROS master) roscore
   (manual action) 5.19) connect USB joystick
   5.20) (ROS master) rosrun joy joy_node
   (optional) 5.30) rqt_graph
   5.40) (ROS master) rosrun valter valter_joy_teleop_cmd_vel_pub
6) valter1 (ssh 192.168.101.101)
   6.10) (valter1) rosrun valter cmd_vel_subscriber
7) Launch expclient 
   7.0.0) cd /home/maska/git/valter/software/computer/client/qt/build-expclient-Desktop_Qt_5_7_0_GCC_64bit-Debug
   7.0.0) ./expclient wlan0
	   7.1.0) (reminder) (from Qt)  Disable 192.168.0.* (wired interdafce)
	   7.10) (TCP Interface) -> set Central Host IP Address (Valter workshop 192.168.101.100)
	   7.20) (TCP Interface) -> press button "Update Settings / Connect All"
	   7.30) (TCP Interface) -> Control Mode column -> Uncheck All except [PLATFORM-CONTROL-P1, BODY-CONTROL-P1]
	   7.40) (TCP Interface) -> press button "Disconnect All"
	   7.50) (TCP Interface) -> press button "Update Settings / Connect All"
	   7.51) Enable back 192.168.0.* (wired interface)

=============================================LEVEL 2
1) valter1
   1.1) rosrun valter bluetooth_server
   1.2) (new termial tab) ssh 192.168.101.101
   1.3) rosrun valter cmd_vel_subscriber
   

=============================================LEVEL 3
20) (expclient) turn ON Kinect2 on BODY-CONTROL-P1
20) (valter2) screen or [screen -r] to restore
30) (valter2) ./initROS
40) (valter2) roslaunch freenect_launch kinect2.launch


10) (valter1) screen or [screen -r] to restore
20) (valter1) rosrun valter cmd_vel_subscriber

10) (ROS master) roscore
20) (ROS master) roslaunch /home/maska/git/valter/software/ros/launch/master/valter-tf.launch
30) (ROS master) roslaunch /home/maska/git/valter/software/ros/launch/master/freenect_master.launch
40) (ROS master) roslaunch valter_movit valter.launch
50) (ROS master) roslaunch /home/maska/git/valter/software/ros/launch/master/rtabmap_ros/launch/valter.launch localization:=true
                 rosservice call /rtabmap/reset_odom
                 rosservice call /rtabmap/reset
                 rosservice call rtabmap/set_mode_mapping
                 rosservice call rtabmap/set_mode_localization
60) (ROS master) roslaunch /home/maska/git/valter/software/ros/launch/master/move_base_and_planner.launch
                 rostopic pub /move_base/cancel actionlib_msgs/GoalID -- {}

=============================================LEVEL 4 (MoveIt!)
10) (valter1) screen or [screen -r] to restore
20) (valter1) rosrun valter valter_joint_states_publisher
30) (ROS master) (optional) roslaunch valter_movit demo.launch
40) (ROS master expclient) "Stop All Watchers" for ARM-CONTROL-LEFT, ARM-CONTROL-RIGHT

=============================================LEVEL 5 (find_object_2d & ORK)
10) (valter2) kinect1 or kinect2 rgb & depth publishing
20) (ROS master) roslaunch find_object_2d find_object_3d.launch
30) (ROS master)(optional if not running yet) roslaunch freenect_kinect2_master.launch
40) (ROS master) rosrun object_recognition_core detection -c  `rospack find object_recognition_tabletop`/conf/detection.object.ros.ork

=============================================LEVEL 6 (object recosntruction)
00)  (ROS master) (before each command) source /home/maska/ork/install/setup.sh
10)  (ROS master) roslaunch freenect_launch freenect.launch depth_registration:=true
20)  (ROS master) rosrun rviz rviz
30)  (optional)(ROS master) rosrun object_recognition_capture capture --seg_z_min 0.01 -o <object-name>.bag --preview
40)  (capture)(ROS master) rosrun object_recognition_capture capture --seg_z_min 0.01 -o <object-name>
50)  (optional) ~/ork/src/capture/apps/bagscripts/concat.py <object-name.bag> <object-name-session-1.bag> 
60)  (optional)(upload captured)(ROS master) rosrun object_recognition_capture upload -a 'Alexey M' -e 'maska@mail.ru' -i <object-name>.bag -n '<object-name>' -d '<object description>' <descriptor1, descriptor2> --commit
70)  (optional)(reconstruction) rosrun object_recognition_reconstruction mesh_object --all --visualize --commit
80)  (optional)(training) rosrun object_recognition_core training -c `rospack find object_recognition_tod`/conf/training.ork --visualize
90)  (ROS master) rosrun object_recognition_core detection -c `rospack find object_recognition_tod`/conf/detection.ros.ork
100) (ROS master)(tabletop recognition) rosrun object_recognition_core detection -c  `rospack find object_recognition_tabletop`/conf/detection.object.ros.ork

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
0) (ROS master) (if not started) roscore
1) (optional) (ROS master) cat /home/maska/git/valter/software/ros/launch/master
1.1) (ROS master) roslaunch /home/maska/git/valter/software/ros/launch/master/valter-tf.launch
2) (ROS master) roslaunch /home/maska/git/valter/software/ros/launch/master/freenect_master.launch
3) (valter2) ssh 192.168.101.102
4) (valter2) screen or [screen -r] to restore
5) (valter2) ./initROS
6) (check)(Kinect if powered on) lsusb 
7) (ROS master)(expclient) (TCP Interface) Check BODY-CONTROL-P1 is connected
8) (valter2) roslaunch freenect_launch kinect2.launch
9)  
10) (ROS master) roslaunch valter_movit valter.launch
11) (ROS master) roslaunch rtabmap_ros valter.launch localization:=true (roslaunch rtabmap_ros valter.launch rtabmap_args:="--delete_db_on_start" localization:=false)
12) (ROS master) roslaunch /home/maska/git/valter/software/ros/launch/master/move_base_and_planner.launch
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~








https://github.com/iki-wgt/capture/tree/topic_capture































































































































































===============================================================================OBSOLETE
export ROS_MASTER_URI=http://192.168.0.100:11311
export ROS_IP=`hostname -I`
hostname -I
export ROS_IP=

export ROS_IP=192.168.0.252

syncTime

source /home/maska/git/valter/software/ros/workspaces/master/devel/setup.sh
source /home/maska/git/valter/software/ros/workspaces/valter1/devel/setup.sh


rostopic pub /move_base/cancel actionlib_msgs/GoalID -- {}



===========ROS initialization================
on master expclient start from
~/git/valter/software/computer/client/qt/build-expclient-Desktop_Qt_5_7_0_GCC_64bit-Debug
./expclient wlan0
1) 5v
2) valter2
3) ssh 192.168.101.102
4) kinect (1 or 2) on
===========master
0)export ROS_IP=
0)roscore

3)roslaunch freenect_launch freenect_master.launch
4)roslaunch valter_movit valter.launch
5)roslaunch rtabmap_ros valter.launch localization:=true
6)
cd ~/git/valter/software/ros/launch/master
roslaunch /home//git/valter/software/ros/launch/master/move_base_and_planner.launch

====joystick
rosrun joy joy_node

==========valter2
1) ./syncTime
2) hostname -I
3) export ROS_IP= (first from hostname -I)
4) export ROS_MASTER_URI=http://192.168.0.252:11311
5) screen
6) verify kinect power is on
7) roslaunch freenect_launch kinect2.launch
