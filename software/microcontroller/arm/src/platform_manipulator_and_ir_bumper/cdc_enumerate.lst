   1              		.file	"cdc_enumerate.c"
   9              	.Ltext0:
  10              		.align	2
  11              		.global	AT91F_CDC_Open
  13              	AT91F_CDC_Open:
  14              	.LFB290:
  15              		.file 1 "cdc_enumerate.c"
   1:cdc_enumerate.c **** //*----------------------------------------------------------------------------
   2:cdc_enumerate.c **** //*      ATMEL Microcontroller Software Support  -  ROUSSET  -
   3:cdc_enumerate.c **** //*----------------------------------------------------------------------------
   4:cdc_enumerate.c **** //* The software is delivered "AS IS" without warranty or condition of any
   5:cdc_enumerate.c **** //* kind, either express, implied or statutory. This includes without
   6:cdc_enumerate.c **** //* limitation any warranty or condition with respect to merchantability or
   7:cdc_enumerate.c **** //* fitness for any particular purpose, or against the infringements of
   8:cdc_enumerate.c **** //* intellectual property rights of others.
   9:cdc_enumerate.c **** //*----------------------------------------------------------------------------
  10:cdc_enumerate.c **** //* File Name           : cdc_enumerate.c
  11:cdc_enumerate.c **** //* Object              : Handle CDC enumeration
  12:cdc_enumerate.c **** //*
  13:cdc_enumerate.c **** //* 1.0 Apr 20 200 	: ODi Creation
  14:cdc_enumerate.c **** //* 1.1 14/Sep/2004 JPP : Minor change
  15:cdc_enumerate.c **** //* 1.1 15/12/2004  JPP : suppress warning
  16:cdc_enumerate.c **** //* 1.2 30-Jun-2006 JPP : Set in AT91C_UDP_EPTYPE_INT_IN
  17:cdc_enumerate.c **** //*----------------------------------------------------------------------------
  18:cdc_enumerate.c **** #include "Board.h"
  19:cdc_enumerate.c **** #include "cdc_enumerate.h"
  20:cdc_enumerate.c **** 
  21:cdc_enumerate.c **** typedef unsigned char  uchar;
  22:cdc_enumerate.c **** typedef unsigned short ushort;
  23:cdc_enumerate.c **** typedef unsigned int   uint;
  24:cdc_enumerate.c **** 
  25:cdc_enumerate.c **** #define MIN(a, b) (((a) < (b)) ? (a) : (b))
  26:cdc_enumerate.c **** 
  27:cdc_enumerate.c **** #define AT91C_EP_IN_SIZE 0x40
  28:cdc_enumerate.c **** 
  29:cdc_enumerate.c **** const char devDescriptor[] = {
  30:cdc_enumerate.c **** 	/* Device descriptor */
  31:cdc_enumerate.c **** 	0x12,   // bLength
  32:cdc_enumerate.c **** 	0x01,   // bDescriptorType
  33:cdc_enumerate.c **** 	0x10,   // bcdUSBL
  34:cdc_enumerate.c **** 	0x01,   //
  35:cdc_enumerate.c **** 	0x02,   // bDeviceClass:    CDC class code
  36:cdc_enumerate.c **** 	0x00,   // bDeviceSubclass: CDC class sub code
  37:cdc_enumerate.c **** 	0x00,   // bDeviceProtocol: CDC Device protocol
  38:cdc_enumerate.c **** 	0x08,   // bMaxPacketSize0
  39:cdc_enumerate.c **** 	0xEB,   // idVendorL
  40:cdc_enumerate.c **** 	0x03,   //
  41:cdc_enumerate.c **** 	// mtmt 0x24,   // idProductL
  42:cdc_enumerate.c **** 	0x25,   // idProductL
  43:cdc_enumerate.c **** 	0x61,   //
  44:cdc_enumerate.c **** 	0x10,   // bcdDeviceL
  45:cdc_enumerate.c **** 	0x01,   //
  46:cdc_enumerate.c **** 	0x00,   // iManufacturer    // 0x01
  47:cdc_enumerate.c **** 	0x00,   // iProduct
  48:cdc_enumerate.c **** 	0x00,   // SerialNumber
  49:cdc_enumerate.c **** 	0x01    // bNumConfigs
  50:cdc_enumerate.c **** };
  51:cdc_enumerate.c **** 
  52:cdc_enumerate.c **** const char cfgDescriptor[] = {
  53:cdc_enumerate.c **** 	/* ============== CONFIGURATION 1 =========== */
  54:cdc_enumerate.c **** 	/* Configuration 1 descriptor */
  55:cdc_enumerate.c **** 	0x09,   // CbLength
  56:cdc_enumerate.c **** 	0x02,   // CbDescriptorType
  57:cdc_enumerate.c **** 	0x43,   // CwTotalLength 2 EP + Control
  58:cdc_enumerate.c **** 	0x00,
  59:cdc_enumerate.c **** 	0x02,   // CbNumInterfaces
  60:cdc_enumerate.c **** 	0x01,   // CbConfigurationValue
  61:cdc_enumerate.c **** 	0x00,   // CiConfiguration
  62:cdc_enumerate.c **** 	0xC0,   // CbmAttributes 0xA0
  63:cdc_enumerate.c **** 	0x00,   // CMaxPower
  64:cdc_enumerate.c **** 
  65:cdc_enumerate.c **** 	/* Communication Class Interface Descriptor Requirement */
  66:cdc_enumerate.c **** 	0x09, // bLength
  67:cdc_enumerate.c **** 	0x04, // bDescriptorType
  68:cdc_enumerate.c **** 	0x00, // bInterfaceNumber
  69:cdc_enumerate.c **** 	0x00, // bAlternateSetting
  70:cdc_enumerate.c **** 	0x01, // bNumEndpoints
  71:cdc_enumerate.c **** 	0x02, // bInterfaceClass
  72:cdc_enumerate.c **** 	0x02, // bInterfaceSubclass
  73:cdc_enumerate.c **** 	0x00, // bInterfaceProtocol
  74:cdc_enumerate.c **** 	0x00, // iInterface
  75:cdc_enumerate.c **** 
  76:cdc_enumerate.c **** 	/* Header Functional Descriptor */
  77:cdc_enumerate.c **** 	0x05, // bFunction Length
  78:cdc_enumerate.c **** 	0x24, // bDescriptor type: CS_INTERFACE
  79:cdc_enumerate.c **** 	0x00, // bDescriptor subtype: Header Func Desc
  80:cdc_enumerate.c **** 	0x10, // bcdCDC:1.1
  81:cdc_enumerate.c **** 	0x01,
  82:cdc_enumerate.c **** 
  83:cdc_enumerate.c **** 	/* ACM Functional Descriptor */
  84:cdc_enumerate.c **** 	0x04, // bFunctionLength
  85:cdc_enumerate.c **** 	0x24, // bDescriptor Type: CS_INTERFACE
  86:cdc_enumerate.c **** 	0x02, // bDescriptor Subtype: ACM Func Desc
  87:cdc_enumerate.c **** 	0x00, // bmCapabilities
  88:cdc_enumerate.c **** 
  89:cdc_enumerate.c **** 	/* Union Functional Descriptor */
  90:cdc_enumerate.c **** 	0x05, // bFunctionLength
  91:cdc_enumerate.c **** 	0x24, // bDescriptorType: CS_INTERFACE
  92:cdc_enumerate.c **** 	0x06, // bDescriptor Subtype: Union Func Desc
  93:cdc_enumerate.c **** 	0x00, // bMasterInterface: Communication Class Interface
  94:cdc_enumerate.c **** 	0x01, // bSlaveInterface0: Data Class Interface
  95:cdc_enumerate.c **** 
  96:cdc_enumerate.c **** 	/* Call Management Functional Descriptor */
  97:cdc_enumerate.c **** 	0x05, // bFunctionLength
  98:cdc_enumerate.c **** 	0x24, // bDescriptor Type: CS_INTERFACE
  99:cdc_enumerate.c **** 	0x01, // bDescriptor Subtype: Call Management Func Desc
 100:cdc_enumerate.c **** 	0x00, // bmCapabilities: D1 + D0
 101:cdc_enumerate.c **** 	0x01, // bDataInterface: Data Class Interface 1
 102:cdc_enumerate.c **** 
 103:cdc_enumerate.c **** 	/* Endpoint 1 descriptor */
 104:cdc_enumerate.c **** 	0x07,   // bLength
 105:cdc_enumerate.c **** 	0x05,   // bDescriptorType
 106:cdc_enumerate.c **** 	0x83,   // bEndpointAddress, Endpoint 03 - IN
 107:cdc_enumerate.c **** 	0x03,   // bmAttributes      INT
 108:cdc_enumerate.c **** 	0x08,   // wMaxPacketSize
 109:cdc_enumerate.c **** 	0x00,
 110:cdc_enumerate.c **** 	0xFF,   // bInterval
 111:cdc_enumerate.c **** 
 112:cdc_enumerate.c **** 	/* Data Class Interface Descriptor Requirement */
 113:cdc_enumerate.c **** 	0x09, // bLength
 114:cdc_enumerate.c **** 	0x04, // bDescriptorType
 115:cdc_enumerate.c **** 	0x01, // bInterfaceNumber
 116:cdc_enumerate.c **** 	0x00, // bAlternateSetting
 117:cdc_enumerate.c **** 	0x02, // bNumEndpoints
 118:cdc_enumerate.c **** 	0x0A, // bInterfaceClass
 119:cdc_enumerate.c **** 	0x00, // bInterfaceSubclass
 120:cdc_enumerate.c **** 	0x00, // bInterfaceProtocol
 121:cdc_enumerate.c **** 	0x00, // iInterface
 122:cdc_enumerate.c **** 
 123:cdc_enumerate.c **** 	/* First alternate setting */
 124:cdc_enumerate.c **** 	/* Endpoint 1 descriptor */
 125:cdc_enumerate.c **** 	0x07,   // bLength
 126:cdc_enumerate.c **** 	0x05,   // bDescriptorType
 127:cdc_enumerate.c **** 	0x01,   // bEndpointAddress, Endpoint 01 - OUT
 128:cdc_enumerate.c **** 	0x02,   // bmAttributes      BULK
 129:cdc_enumerate.c **** 	AT91C_EP_OUT_SIZE,   // wMaxPacketSize
 130:cdc_enumerate.c **** 	0x00,
 131:cdc_enumerate.c **** 	0x00,   // bInterval
 132:cdc_enumerate.c **** 
 133:cdc_enumerate.c **** 	/* Endpoint 2 descriptor */
 134:cdc_enumerate.c **** 	0x07,   // bLength
 135:cdc_enumerate.c **** 	0x05,   // bDescriptorType
 136:cdc_enumerate.c **** 	0x82,   // bEndpointAddress, Endpoint 02 - IN
 137:cdc_enumerate.c **** 	0x02,   // bmAttributes      BULK
 138:cdc_enumerate.c **** 	AT91C_EP_IN_SIZE,   // wMaxPacketSize
 139:cdc_enumerate.c **** 	0x00,
 140:cdc_enumerate.c **** 	0x00    // bInterval
 141:cdc_enumerate.c **** };
 142:cdc_enumerate.c **** 
 143:cdc_enumerate.c **** /* USB standard request code */
 144:cdc_enumerate.c **** #define STD_GET_STATUS_ZERO           0x0080
 145:cdc_enumerate.c **** #define STD_GET_STATUS_INTERFACE      0x0081
 146:cdc_enumerate.c **** #define STD_GET_STATUS_ENDPOINT       0x0082
 147:cdc_enumerate.c **** 
 148:cdc_enumerate.c **** #define STD_CLEAR_FEATURE_ZERO        0x0100
 149:cdc_enumerate.c **** #define STD_CLEAR_FEATURE_INTERFACE   0x0101
 150:cdc_enumerate.c **** #define STD_CLEAR_FEATURE_ENDPOINT    0x0102
 151:cdc_enumerate.c **** 
 152:cdc_enumerate.c **** #define STD_SET_FEATURE_ZERO          0x0300
 153:cdc_enumerate.c **** #define STD_SET_FEATURE_INTERFACE     0x0301
 154:cdc_enumerate.c **** #define STD_SET_FEATURE_ENDPOINT      0x0302
 155:cdc_enumerate.c **** 
 156:cdc_enumerate.c **** #define STD_SET_ADDRESS               0x0500
 157:cdc_enumerate.c **** #define STD_GET_DESCRIPTOR            0x0680
 158:cdc_enumerate.c **** #define STD_SET_DESCRIPTOR            0x0700
 159:cdc_enumerate.c **** #define STD_GET_CONFIGURATION         0x0880
 160:cdc_enumerate.c **** #define STD_SET_CONFIGURATION         0x0900
 161:cdc_enumerate.c **** #define STD_GET_INTERFACE             0x0A81
 162:cdc_enumerate.c **** #define STD_SET_INTERFACE             0x0B01
 163:cdc_enumerate.c **** #define STD_SYNCH_FRAME               0x0C82
 164:cdc_enumerate.c **** 
 165:cdc_enumerate.c **** /* CDC Class Specific Request Code */
 166:cdc_enumerate.c **** #define GET_LINE_CODING               0x21A1
 167:cdc_enumerate.c **** #define SET_LINE_CODING               0x2021
 168:cdc_enumerate.c **** #define SET_CONTROL_LINE_STATE        0x2221
 169:cdc_enumerate.c **** 
 170:cdc_enumerate.c **** 
 171:cdc_enumerate.c **** typedef struct {
 172:cdc_enumerate.c **** 	unsigned int dwDTERRate;
 173:cdc_enumerate.c **** 	char bCharFormat;
 174:cdc_enumerate.c **** 	char bParityType;
 175:cdc_enumerate.c **** 	char bDataBits;
 176:cdc_enumerate.c **** } AT91S_CDC_LINE_CODING, *AT91PS_CDC_LINE_CODING;
 177:cdc_enumerate.c **** 
 178:cdc_enumerate.c **** AT91S_CDC_LINE_CODING line = {
 179:cdc_enumerate.c **** 	115200, // baudrate
 180:cdc_enumerate.c **** 	0,      // 1 Stop Bit
 181:cdc_enumerate.c **** 	0,      // None Parity
 182:cdc_enumerate.c **** 	8};     // 8 Data bits
 183:cdc_enumerate.c **** 
 184:cdc_enumerate.c **** // mtmt uint currentReceiveBank = AT91C_UDP_RX_DATA_BK0;
 185:cdc_enumerate.c **** 
 186:cdc_enumerate.c **** 
 187:cdc_enumerate.c **** static uchar AT91F_UDP_IsConfigured(AT91PS_CDC pCdc);
 188:cdc_enumerate.c **** static uint AT91F_UDP_Read(AT91PS_CDC pCdc, char *pData, uint length);
 189:cdc_enumerate.c **** static uint AT91F_UDP_Write(AT91PS_CDC pCdc, const char *pData, uint length);
 190:cdc_enumerate.c **** static void AT91F_CDC_Enumerate(AT91PS_CDC pCdc);
 191:cdc_enumerate.c **** 
 192:cdc_enumerate.c **** 
 193:cdc_enumerate.c **** //*----------------------------------------------------------------------------
 194:cdc_enumerate.c **** //* \fn    AT91F_CDC_Open
 195:cdc_enumerate.c **** //* \brief
 196:cdc_enumerate.c **** //*----------------------------------------------------------------------------
 197:cdc_enumerate.c **** AT91PS_CDC AT91F_CDC_Open(AT91PS_CDC pCdc, AT91PS_UDP pUdp)
 198:cdc_enumerate.c **** {
  16              		.loc 1 198 0
  17              		@ Function supports interworking.
  18              		@ args = 0, pretend = 0, frame = 0
  19              		@ frame_needed = 0, uses_anonymous_args = 0
  20              		@ link register save eliminated.
  21              	.LVL0:
 199:cdc_enumerate.c **** 	pCdc->pUdp = pUdp;
 200:cdc_enumerate.c **** 	pCdc->currentConfiguration = 0;
 201:cdc_enumerate.c **** 	pCdc->currentConnection    = 0;
 202:cdc_enumerate.c **** 	pCdc->currentRcvBank       = AT91C_UDP_RX_DATA_BK0;
 203:cdc_enumerate.c **** 	pCdc->IsConfigured = AT91F_UDP_IsConfigured;
 204:cdc_enumerate.c **** 	pCdc->Write        = AT91F_UDP_Write;
 205:cdc_enumerate.c **** 	pCdc->Read         = AT91F_UDP_Read;
  22              		.loc 1 205 0
  23 0000 2C209FE5 		ldr	r2, .L3
  24 0004 142080E5 		str	r2, [r0, #20]
  25              		.loc 1 202 0
  26 0008 0220A0E3 		mov	r2, #2
  27 000c 082080E5 		str	r2, [r0, #8]
  28              		.loc 1 203 0
  29 0010 20209FE5 		ldr	r2, .L3+4
  30 0014 0C2080E5 		str	r2, [r0, #12]
  31              		.loc 1 204 0
  32 0018 1C209FE5 		ldr	r2, .L3+8
  33              		.loc 1 200 0
  34 001c 00C0A0E3 		mov	ip, #0
  35              		.loc 1 198 0
  36              		@ lr needed for prologue
  37              		.loc 1 199 0
  38 0020 001080E5 		str	r1, [r0, #0]
  39              		.loc 1 201 0
  40 0024 05C0C0E5 		strb	ip, [r0, #5]
  41              		.loc 1 204 0
  42 0028 102080E5 		str	r2, [r0, #16]
  43              		.loc 1 200 0
  44 002c 04C0C0E5 		strb	ip, [r0, #4]
  45              	.LVL1:
 206:cdc_enumerate.c **** 	return pCdc;
 207:cdc_enumerate.c **** }
  46              		.loc 1 207 0
  47 0030 1EFF2FE1 		bx	lr
  48              	.L4:
  49              		.align	2
  50              	.L3:
  51 0034 74060000 		.word	AT91F_UDP_Read
  52 0038 68010000 		.word	AT91F_UDP_IsConfigured
  53 003c 80050000 		.word	AT91F_UDP_Write
  54              	.LFE290:
  56              		.align	2
  58              	AT91F_USB_SendData:
  59              	.LFB294:
 208:cdc_enumerate.c **** 
 209:cdc_enumerate.c **** //*----------------------------------------------------------------------------
 210:cdc_enumerate.c **** //* \fn    AT91F_UDP_IsConfigured
 211:cdc_enumerate.c **** //* \brief Test if the device is configured and handle enumeration
 212:cdc_enumerate.c **** //*----------------------------------------------------------------------------
 213:cdc_enumerate.c **** static uchar AT91F_UDP_IsConfigured(AT91PS_CDC pCdc)
 214:cdc_enumerate.c **** {
 215:cdc_enumerate.c **** 	AT91PS_UDP pUDP = pCdc->pUdp;
 216:cdc_enumerate.c **** 	AT91_REG isr = pUDP->UDP_ISR;
 217:cdc_enumerate.c **** 
 218:cdc_enumerate.c **** 	if (isr & AT91C_UDP_ENDBUSRES) {
 219:cdc_enumerate.c **** 		pUDP->UDP_ICR = AT91C_UDP_ENDBUSRES;
 220:cdc_enumerate.c **** 		// reset all endpoints
 221:cdc_enumerate.c **** 		pUDP->UDP_RSTEP  = (unsigned int)-1;
 222:cdc_enumerate.c **** 		pUDP->UDP_RSTEP  = 0;
 223:cdc_enumerate.c **** 		// Enable the function
 224:cdc_enumerate.c **** 		pUDP->UDP_FADDR = AT91C_UDP_FEN;
 225:cdc_enumerate.c **** 		// Configure endpoint 0
 226:cdc_enumerate.c **** 		pUDP->UDP_CSR[0] = (AT91C_UDP_EPEDS | AT91C_UDP_EPTYPE_CTRL);
 227:cdc_enumerate.c **** 	}
 228:cdc_enumerate.c **** 	else if (isr & AT91C_UDP_EPINT0) {
 229:cdc_enumerate.c **** 		pUDP->UDP_ICR = AT91C_UDP_EPINT0;
 230:cdc_enumerate.c **** 		AT91F_CDC_Enumerate(pCdc);
 231:cdc_enumerate.c **** 	}
 232:cdc_enumerate.c **** 	return pCdc->currentConfiguration;
 233:cdc_enumerate.c **** }
 234:cdc_enumerate.c **** 
 235:cdc_enumerate.c **** //*----------------------------------------------------------------------------
 236:cdc_enumerate.c **** //* \fn    AT91F_UDP_Read
 237:cdc_enumerate.c **** //* \brief Read available data from Endpoint OUT
 238:cdc_enumerate.c **** //*----------------------------------------------------------------------------
 239:cdc_enumerate.c **** static uint AT91F_UDP_Read(AT91PS_CDC pCdc, char *pData, uint length)
 240:cdc_enumerate.c **** {
 241:cdc_enumerate.c **** 	AT91PS_UDP pUdp = pCdc->pUdp;
 242:cdc_enumerate.c **** 	uint packetSize, nbBytesRcv = 0, currentReceiveBank = pCdc->currentRcvBank;
 243:cdc_enumerate.c **** 
 244:cdc_enumerate.c **** 	while (length) {
 245:cdc_enumerate.c **** 		if ( !AT91F_UDP_IsConfigured(pCdc) )
 246:cdc_enumerate.c **** 			break;
 247:cdc_enumerate.c **** 		if ( pUdp->UDP_CSR[AT91C_EP_OUT] & currentReceiveBank ) {
 248:cdc_enumerate.c **** 			packetSize = MIN(pUdp->UDP_CSR[AT91C_EP_OUT] >> 16, length);
 249:cdc_enumerate.c **** 			length -= packetSize;
 250:cdc_enumerate.c **** 			if (packetSize < AT91C_EP_OUT_SIZE)
 251:cdc_enumerate.c **** 				length = 0;
 252:cdc_enumerate.c **** 			while(packetSize--)
 253:cdc_enumerate.c **** 				pData[nbBytesRcv++] = pUdp->UDP_FDR[AT91C_EP_OUT];
 254:cdc_enumerate.c **** 			pUdp->UDP_CSR[AT91C_EP_OUT] &= ~(currentReceiveBank);
 255:cdc_enumerate.c **** 			if (currentReceiveBank == AT91C_UDP_RX_DATA_BK0)
 256:cdc_enumerate.c **** 				currentReceiveBank = AT91C_UDP_RX_DATA_BK1;
 257:cdc_enumerate.c **** 			else
 258:cdc_enumerate.c **** 				currentReceiveBank = AT91C_UDP_RX_DATA_BK0;
 259:cdc_enumerate.c **** 
 260:cdc_enumerate.c **** 		}
 261:cdc_enumerate.c **** 		else
 262:cdc_enumerate.c **** 		{
 263:cdc_enumerate.c **** 		    break;
 264:cdc_enumerate.c **** 		}
 265:cdc_enumerate.c **** 	}
 266:cdc_enumerate.c **** 	pCdc->currentRcvBank = currentReceiveBank;
 267:cdc_enumerate.c **** 	return nbBytesRcv;
 268:cdc_enumerate.c **** 
 269:cdc_enumerate.c **** }
 270:cdc_enumerate.c **** 
 271:cdc_enumerate.c **** //*----------------------------------------------------------------------------
 272:cdc_enumerate.c **** //* \fn    AT91F_CDC_Write
 273:cdc_enumerate.c **** //* \brief Send through endpoint 2
 274:cdc_enumerate.c **** //*----------------------------------------------------------------------------
 275:cdc_enumerate.c **** static uint AT91F_UDP_Write(AT91PS_CDC pCdc, const char *pData, uint length)
 276:cdc_enumerate.c **** {
 277:cdc_enumerate.c **** 	AT91PS_UDP pUdp = pCdc->pUdp;
 278:cdc_enumerate.c **** 	uint cpt = 0;
 279:cdc_enumerate.c **** 
 280:cdc_enumerate.c **** 	// Send the first packet
 281:cdc_enumerate.c **** 	cpt = MIN(length, AT91C_EP_IN_SIZE);
 282:cdc_enumerate.c **** 	length -= cpt;
 283:cdc_enumerate.c **** 	while (cpt--) pUdp->UDP_FDR[AT91C_EP_IN] = *pData++;
 284:cdc_enumerate.c **** 	pUdp->UDP_CSR[AT91C_EP_IN] |= AT91C_UDP_TXPKTRDY;
 285:cdc_enumerate.c **** 
 286:cdc_enumerate.c **** 	while (length) {
 287:cdc_enumerate.c **** 		// Fill the second bank
 288:cdc_enumerate.c **** 		cpt = MIN(length, AT91C_EP_IN_SIZE);
 289:cdc_enumerate.c **** 		length -= cpt;
 290:cdc_enumerate.c **** 		while (cpt--) pUdp->UDP_FDR[AT91C_EP_IN] = *pData++;
 291:cdc_enumerate.c **** 		// Wait for the the first bank to be sent
 292:cdc_enumerate.c **** 		while ( !(pUdp->UDP_CSR[AT91C_EP_IN] & AT91C_UDP_TXCOMP) )
 293:cdc_enumerate.c **** 			if ( !AT91F_UDP_IsConfigured(pCdc) ) return length;
 294:cdc_enumerate.c **** 		pUdp->UDP_CSR[AT91C_EP_IN] &= ~(AT91C_UDP_TXCOMP);
 295:cdc_enumerate.c **** 		while (pUdp->UDP_CSR[AT91C_EP_IN] & AT91C_UDP_TXCOMP);
 296:cdc_enumerate.c **** 		pUdp->UDP_CSR[AT91C_EP_IN] |= AT91C_UDP_TXPKTRDY;
 297:cdc_enumerate.c **** 	}
 298:cdc_enumerate.c **** 	// Wait for the end of transfer
 299:cdc_enumerate.c **** 	while ( !(pUdp->UDP_CSR[AT91C_EP_IN] & AT91C_UDP_TXCOMP) )
 300:cdc_enumerate.c **** 		if ( !AT91F_UDP_IsConfigured(pCdc) ) return length;
 301:cdc_enumerate.c **** 	pUdp->UDP_CSR[AT91C_EP_IN] &= ~(AT91C_UDP_TXCOMP);
 302:cdc_enumerate.c **** 	while (pUdp->UDP_CSR[AT91C_EP_IN] & AT91C_UDP_TXCOMP);
 303:cdc_enumerate.c **** 
 304:cdc_enumerate.c **** 	return length;
 305:cdc_enumerate.c **** }
 306:cdc_enumerate.c **** 
 307:cdc_enumerate.c **** //*----------------------------------------------------------------------------
 308:cdc_enumerate.c **** //* \fn    AT91F_USB_SendData
 309:cdc_enumerate.c **** //* \brief Send Data through the control endpoint
 310:cdc_enumerate.c **** //*----------------------------------------------------------------------------
 311:cdc_enumerate.c **** unsigned int csrTab[100];
 312:cdc_enumerate.c **** unsigned char csrIdx = 0;
 313:cdc_enumerate.c **** 
 314:cdc_enumerate.c **** static void AT91F_USB_SendData(AT91PS_UDP pUdp, const char *pData, uint length)
 315:cdc_enumerate.c **** {
  60              		.loc 1 315 0
  61              		@ Function supports interworking.
  62              		@ args = 0, pretend = 0, frame = 4
  63              		@ frame_needed = 0, uses_anonymous_args = 0
  64              	.LVL2:
  65 0040 04E02DE5 		str	lr, [sp, #-4]!
  66              	.LCFI0:
  67 0044 04D04DE2 		sub	sp, sp, #4
  68              	.LCFI1:
  69              	.LVL3:
  70              	.L6:
 316:cdc_enumerate.c **** 	uint cpt = 0;
 317:cdc_enumerate.c **** 	AT91_REG csr;
 318:cdc_enumerate.c **** 
 319:cdc_enumerate.c **** 	do {
 320:cdc_enumerate.c **** 		cpt = MIN(length, 8);
  71              		.loc 1 320 0
  72 0048 080052E3 		cmp	r2, #8
  73 004c 02E0A031 		movcc	lr, r2
  74 0050 08E0A023 		movcs	lr, #8
  75 0054 0EC0A0E1 		mov	ip, lr
  76 0058 170000EA 		b	.L7
  77              	.L8:
 321:cdc_enumerate.c **** 		length -= cpt;
 322:cdc_enumerate.c **** 
 323:cdc_enumerate.c **** 		while (cpt--)
 324:cdc_enumerate.c **** 			pUdp->UDP_FDR[0] = *pData++;
  78              		.loc 1 324 0
  79 005c 0130D1E4 		ldrb	r3, [r1], #1	@ zero_extendqisi2
  80 0060 503080E5 		str	r3, [r0, #80]
  81              	.L7:
  82              		.loc 1 323 0
  83 0064 01C05CE2 		subs	ip, ip, #1
  84 0068 1500002A 		bcs	.L8
 325:cdc_enumerate.c **** 
 326:cdc_enumerate.c **** 		if (pUdp->UDP_CSR[0] & AT91C_UDP_TXCOMP) {
  85              		.loc 1 326 0
  86 006c 303090E5 		ldr	r3, [r0, #48]
  87 0070 010013E3 		tst	r3, #1
  88 0074 2200000A 		beq	.L10
 327:cdc_enumerate.c **** 			pUdp->UDP_CSR[0] &= ~(AT91C_UDP_TXCOMP);
  89              		.loc 1 327 0
  90 0078 303090E5 		ldr	r3, [r0, #48]
  91 007c 0130C3E3 		bic	r3, r3, #1
  92 0080 303080E5 		str	r3, [r0, #48]
  93              	.L12:
 328:cdc_enumerate.c **** 			while (pUdp->UDP_CSR[0] & AT91C_UDP_TXCOMP);
  94              		.loc 1 328 0
  95 0084 303090E5 		ldr	r3, [r0, #48]
  96 0088 010013E3 		tst	r3, #1
  97 008c 1F00001A 		bne	.L12
  98              	.L10:
 329:cdc_enumerate.c **** 		}
 330:cdc_enumerate.c **** 
 331:cdc_enumerate.c **** 		pUdp->UDP_CSR[0] |= AT91C_UDP_TXPKTRDY;
  99              		.loc 1 331 0
 100 0090 303090E5 		ldr	r3, [r0, #48]
 101 0094 103083E3 		orr	r3, r3, #16
 102 0098 303080E5 		str	r3, [r0, #48]
 103              	.L13:
 332:cdc_enumerate.c **** 		do {
 333:cdc_enumerate.c **** 			csr = pUdp->UDP_CSR[0];
 104              		.loc 1 333 0
 105 009c 303090E5 		ldr	r3, [r0, #48]
 106 00a0 00308DE5 		str	r3, [sp, #0]
 334:cdc_enumerate.c **** 
 335:cdc_enumerate.c **** 			// Data IN stage has been stopped by a status OUT
 336:cdc_enumerate.c **** 			if (csr & AT91C_UDP_RX_DATA_BK0) {
 107              		.loc 1 336 0
 108 00a4 00309DE5 		ldr	r3, [sp, #0]
 109 00a8 020013E3 		tst	r3, #2
 337:cdc_enumerate.c **** 				pUdp->UDP_CSR[0] &= ~(AT91C_UDP_RX_DATA_BK0);
 110              		.loc 1 337 0
 111 00ac 30309015 		ldrne	r3, [r0, #48]
 112 00b0 0230C313 		bicne	r3, r3, #2
 113 00b4 30308015 		strne	r3, [r0, #48]
 114 00b8 3B00001A 		bne	.L21
 115              	.L14:
 338:cdc_enumerate.c **** 				return;
 339:cdc_enumerate.c **** 			}
 340:cdc_enumerate.c **** 		} while ( !(csr & AT91C_UDP_TXCOMP) );
 116              		.loc 1 340 0
 117 00bc 00309DE5 		ldr	r3, [sp, #0]
 118 00c0 010013E3 		tst	r3, #1
 119 00c4 2500000A 		beq	.L13
 341:cdc_enumerate.c **** 
 342:cdc_enumerate.c **** 	} while (length);
 120              		.loc 1 342 0
 121 00c8 0E2052E0 		subs	r2, r2, lr
 122 00cc 1000001A 		bne	.L6
 343:cdc_enumerate.c **** 
 344:cdc_enumerate.c **** 	if (pUdp->UDP_CSR[0] & AT91C_UDP_TXCOMP) {
 123              		.loc 1 344 0
 124 00d0 303090E5 		ldr	r3, [r0, #48]
 125 00d4 010013E3 		tst	r3, #1
 126 00d8 3B00000A 		beq	.L21
 345:cdc_enumerate.c **** 		pUdp->UDP_CSR[0] &= ~(AT91C_UDP_TXCOMP);
 127              		.loc 1 345 0
 128 00dc 303090E5 		ldr	r3, [r0, #48]
 129 00e0 0130C3E3 		bic	r3, r3, #1
 130 00e4 303080E5 		str	r3, [r0, #48]
 131              	.L20:
 346:cdc_enumerate.c **** 		while (pUdp->UDP_CSR[0] & AT91C_UDP_TXCOMP);
 132              		.loc 1 346 0
 133 00e8 303090E5 		ldr	r3, [r0, #48]
 134 00ec 010013E3 		tst	r3, #1
 135 00f0 3800001A 		bne	.L20
 136              	.L21:
 347:cdc_enumerate.c **** 	}
 348:cdc_enumerate.c **** }
 137              		.loc 1 348 0
 138 00f4 04D08DE2 		add	sp, sp, #4
 139 00f8 04E09DE4 		ldr	lr, [sp], #4
 140 00fc 1EFF2FE1 		bx	lr
 141              	.LFE294:
 143              		.align	2
 144              		.global	AT91F_USB_SendZlp
 146              	AT91F_USB_SendZlp:
 147              	.LFB295:
 349:cdc_enumerate.c **** 
 350:cdc_enumerate.c **** //*----------------------------------------------------------------------------
 351:cdc_enumerate.c **** //* \fn    AT91F_USB_SendZlp
 352:cdc_enumerate.c **** //* \brief Send zero length packet through the control endpoint
 353:cdc_enumerate.c **** //*----------------------------------------------------------------------------
 354:cdc_enumerate.c **** void AT91F_USB_SendZlp(AT91PS_UDP pUdp)
 355:cdc_enumerate.c **** {
 148              		.loc 1 355 0
 149              		@ Function supports interworking.
 150              		@ args = 0, pretend = 0, frame = 0
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 152              		@ link register save eliminated.
 153              	.LVL4:
 356:cdc_enumerate.c **** 	pUdp->UDP_CSR[0] |= AT91C_UDP_TXPKTRDY;
 154              		.loc 1 356 0
 155 0100 303090E5 		ldr	r3, [r0, #48]
 156 0104 103083E3 		orr	r3, r3, #16
 157 0108 303080E5 		str	r3, [r0, #48]
 158              		.loc 1 355 0
 159              		@ lr needed for prologue
 160              	.L29:
 357:cdc_enumerate.c **** 	while ( !(pUdp->UDP_CSR[0] & AT91C_UDP_TXCOMP) );
 161              		.loc 1 357 0
 162 010c 303090E5 		ldr	r3, [r0, #48]
 163 0110 010013E3 		tst	r3, #1
 164 0114 4100000A 		beq	.L29
 358:cdc_enumerate.c **** 	pUdp->UDP_CSR[0] &= ~(AT91C_UDP_TXCOMP);
 165              		.loc 1 358 0
 166 0118 303090E5 		ldr	r3, [r0, #48]
 167 011c 0130C3E3 		bic	r3, r3, #1
 168 0120 303080E5 		str	r3, [r0, #48]
 169              	.L31:
 359:cdc_enumerate.c **** 	while (pUdp->UDP_CSR[0] & AT91C_UDP_TXCOMP);
 170              		.loc 1 359 0
 171 0124 303090E5 		ldr	r3, [r0, #48]
 172 0128 010013E3 		tst	r3, #1
 173 012c 4700001A 		bne	.L31
 360:cdc_enumerate.c **** }
 174              		.loc 1 360 0
 175 0130 1EFF2FE1 		bx	lr
 176              	.LFE295:
 178              		.align	2
 179              		.global	AT91F_USB_SendStall
 181              	AT91F_USB_SendStall:
 182              	.LFB296:
 361:cdc_enumerate.c **** 
 362:cdc_enumerate.c **** //*----------------------------------------------------------------------------
 363:cdc_enumerate.c **** //* \fn    AT91F_USB_SendStall
 364:cdc_enumerate.c **** //* \brief Stall the control endpoint
 365:cdc_enumerate.c **** //*----------------------------------------------------------------------------
 366:cdc_enumerate.c **** void AT91F_USB_SendStall(AT91PS_UDP pUdp)
 367:cdc_enumerate.c **** {
 183              		.loc 1 367 0
 184              		@ Function supports interworking.
 185              		@ args = 0, pretend = 0, frame = 0
 186              		@ frame_needed = 0, uses_anonymous_args = 0
 187              		@ link register save eliminated.
 188              	.LVL5:
 368:cdc_enumerate.c **** 	pUdp->UDP_CSR[0] |= AT91C_UDP_FORCESTALL;
 189              		.loc 1 368 0
 190 0134 303090E5 		ldr	r3, [r0, #48]
 191 0138 203083E3 		orr	r3, r3, #32
 192 013c 303080E5 		str	r3, [r0, #48]
 193              		.loc 1 367 0
 194              		@ lr needed for prologue
 195              	.L39:
 369:cdc_enumerate.c **** 	while ( !(pUdp->UDP_CSR[0] & AT91C_UDP_ISOERROR) );
 196              		.loc 1 369 0
 197 0140 303090E5 		ldr	r3, [r0, #48]
 198 0144 080013E3 		tst	r3, #8
 199 0148 4E00000A 		beq	.L39
 370:cdc_enumerate.c **** 	pUdp->UDP_CSR[0] &= ~(AT91C_UDP_FORCESTALL | AT91C_UDP_ISOERROR);
 200              		.loc 1 370 0
 201 014c 303090E5 		ldr	r3, [r0, #48]
 202 0150 2830C3E3 		bic	r3, r3, #40
 203 0154 303080E5 		str	r3, [r0, #48]
 204              	.L41:
 371:cdc_enumerate.c **** 	while (pUdp->UDP_CSR[0] & (AT91C_UDP_FORCESTALL | AT91C_UDP_ISOERROR));
 205              		.loc 1 371 0
 206 0158 303090E5 		ldr	r3, [r0, #48]
 207 015c 280013E3 		tst	r3, #40
 208 0160 5400001A 		bne	.L41
 372:cdc_enumerate.c **** }
 209              		.loc 1 372 0
 210 0164 1EFF2FE1 		bx	lr
 211              	.LFE296:
 213              		.align	2
 215              	AT91F_UDP_IsConfigured:
 216              	.LFB291:
 217              		.loc 1 214 0
 218              		@ Function supports interworking.
 219              		@ args = 0, pretend = 0, frame = 8
 220              		@ frame_needed = 0, uses_anonymous_args = 0
 221              	.LVL6:
 222 0168 F0412DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, lr}
 223              	.LCFI2:
 224              		.loc 1 215 0
 225 016c 005090E5 		ldr	r5, [r0, #0]
 226              	.LVL7:
 227              		.loc 1 216 0
 228 0170 1C3095E5 		ldr	r3, [r5, #28]
 229              		.loc 1 214 0
 230 0174 08D04DE2 		sub	sp, sp, #8
 231              	.LCFI3:
 232              		.loc 1 216 0
 233 0178 00308DE5 		str	r3, [sp, #0]
 234              	.LVL8:
 235              		.loc 1 218 0
 236 017c 00309DE5 		ldr	r3, [sp, #0]
 237 0180 010A13E3 		tst	r3, #4096
 238              		.loc 1 214 0
 239 0184 0080A0E1 		mov	r8, r0
 240              		.loc 1 218 0
 241 0188 6C00000A 		beq	.L49
 242              	.LVL9:
 243              		.loc 1 219 0
 244 018c 013AA0E3 		mov	r3, #4096
 245 0190 203085E5 		str	r3, [r5, #32]
 246              		.loc 1 221 0
 247 0194 0030E0E3 		mvn	r3, #0
 248 0198 283085E5 		str	r3, [r5, #40]
 249              		.loc 1 222 0
 250 019c 013083E2 		add	r3, r3, #1
 251 01a0 283085E5 		str	r3, [r5, #40]
 252              		.loc 1 224 0
 253 01a4 013C83E2 		add	r3, r3, #256
 254 01a8 083085E5 		str	r3, [r5, #8]
 255              		.loc 1 226 0
 256 01ac 7F3C83E2 		add	r3, r3, #32512
 257 01b0 303085E5 		str	r3, [r5, #48]
 258 01b4 520100EA 		b	.L51
 259              	.L49:
 260              		.loc 1 228 0
 261 01b8 00309DE5 		ldr	r3, [sp, #0]
 262 01bc 010013E3 		tst	r3, #1
 263 01c0 5201000A 		beq	.L51
 264              		.loc 1 229 0
 265 01c4 0130A0E3 		mov	r3, #1
 266 01c8 203085E5 		str	r3, [r5, #32]
 267              	.LBB4:
 268              	.LBB5:
 373:cdc_enumerate.c **** 
 374:cdc_enumerate.c **** //*----------------------------------------------------------------------------
 375:cdc_enumerate.c **** //* \fn    AT91F_CDC_Enumerate
 376:cdc_enumerate.c **** //* \brief This function is a callback invoked when a SETUP packet is received
 377:cdc_enumerate.c **** //*----------------------------------------------------------------------------
 378:cdc_enumerate.c **** static void AT91F_CDC_Enumerate(AT91PS_CDC pCdc)
 379:cdc_enumerate.c **** {
 380:cdc_enumerate.c **** 	AT91PS_UDP pUDP = pCdc->pUdp;
 381:cdc_enumerate.c **** 	uchar bmRequestType, bRequest;
 382:cdc_enumerate.c **** 	ushort wValue, wIndex, wLength, wStatus;
 383:cdc_enumerate.c **** 
 384:cdc_enumerate.c **** 
 385:cdc_enumerate.c **** 	if ( !(pUDP->UDP_CSR[0] & AT91C_UDP_RXSETUP) )
 269              		.loc 1 385 0
 270 01cc 303095E5 		ldr	r3, [r5, #48]
 271 01d0 040013E3 		tst	r3, #4
 272 01d4 5201000A 		beq	.L51
 386:cdc_enumerate.c **** 		return;
 387:cdc_enumerate.c **** 
 388:cdc_enumerate.c **** 	bmRequestType = pUDP->UDP_FDR[0];
 273              		.loc 1 388 0
 274 01d8 504095E5 		ldr	r4, [r5, #80]
 389:cdc_enumerate.c **** 	bRequest      = pUDP->UDP_FDR[0];
 275              		.loc 1 389 0
 276 01dc 507095E5 		ldr	r7, [r5, #80]
 390:cdc_enumerate.c **** 	wValue        = (pUDP->UDP_FDR[0] & 0xFF);
 277              		.loc 1 390 0
 278 01e0 501095E5 		ldr	r1, [r5, #80]
 391:cdc_enumerate.c **** 	wValue       |= (pUDP->UDP_FDR[0] << 8);
 279              		.loc 1 391 0
 280 01e4 50E095E5 		ldr	lr, [r5, #80]
 392:cdc_enumerate.c **** 	wIndex        = (pUDP->UDP_FDR[0] & 0xFF);
 281              		.loc 1 392 0
 282 01e8 502095E5 		ldr	r2, [r5, #80]
 393:cdc_enumerate.c **** 	wIndex       |= (pUDP->UDP_FDR[0] << 8);
 283              		.loc 1 393 0
 284 01ec 50C095E5 		ldr	ip, [r5, #80]
 394:cdc_enumerate.c **** 	wLength       = (pUDP->UDP_FDR[0] & 0xFF);
 285              		.loc 1 394 0
 286 01f0 503095E5 		ldr	r3, [r5, #80]
 395:cdc_enumerate.c **** 	wLength      |= (pUDP->UDP_FDR[0] << 8);
 287              		.loc 1 395 0
 288 01f4 500095E5 		ldr	r0, [r5, #80]
 289              		.loc 1 390 0
 290 01f8 FF1001E2 		and	r1, r1, #255
 291              	.LVL10:
 292              		.loc 1 392 0
 293 01fc FF2002E2 		and	r2, r2, #255
 294              	.LVL11:
 295              		.loc 1 394 0
 296 0200 FF3003E2 		and	r3, r3, #255
 297              	.LVL12:
 298              		.loc 1 391 0
 299 0204 0E1481E1 		orr	r1, r1, lr, asl #8
 300              	.LVL13:
 301              		.loc 1 393 0
 302 0208 0C2482E1 		orr	r2, r2, ip, asl #8
 303              	.LVL14:
 304              		.loc 1 395 0
 305 020c 003483E1 		orr	r3, r3, r0, asl #8
 306              	.LVL15:
 307              		.loc 1 388 0
 308 0210 FF4004E2 		and	r4, r4, #255
 309              	.LVL16:
 310              		.loc 1 391 0
 311 0214 0118A0E1 		mov	r1, r1, asl #16
 312              		.loc 1 393 0
 313 0218 0228A0E1 		mov	r2, r2, asl #16
 314              		.loc 1 395 0
 315 021c 0338A0E1 		mov	r3, r3, asl #16
 396:cdc_enumerate.c **** 
 397:cdc_enumerate.c **** 	if (bmRequestType & 0x80) {
 316              		.loc 1 397 0
 317 0220 800014E3 		tst	r4, #128
 318              		.loc 1 391 0
 319 0224 2168A0E1 		mov	r6, r1, lsr #16
 320              	.LVL17:
 321              		.loc 1 393 0
 322 0228 2228A0E1 		mov	r2, r2, lsr #16
 323              	.LVL18:
 324              		.loc 1 395 0
 325 022c 2318A0E1 		mov	r1, r3, lsr #16
 326              	.LVL19:
 327              		.loc 1 397 0
 328 0230 9100000A 		beq	.L54
 398:cdc_enumerate.c **** 		pUDP->UDP_CSR[0] |= AT91C_UDP_DIR;
 329              		.loc 1 398 0
 330 0234 303095E5 		ldr	r3, [r5, #48]
 331 0238 803083E3 		orr	r3, r3, #128
 332 023c 303085E5 		str	r3, [r5, #48]
 333              	.L56:
 399:cdc_enumerate.c **** 		while ( !(pUDP->UDP_CSR[0] & AT91C_UDP_DIR) );
 334              		.loc 1 399 0
 335 0240 303095E5 		ldr	r3, [r5, #48]
 336 0244 800013E3 		tst	r3, #128
 337 0248 8E00000A 		beq	.L56
 338              	.L54:
 400:cdc_enumerate.c **** 	}
 401:cdc_enumerate.c **** 	pUDP->UDP_CSR[0] &= ~AT91C_UDP_RXSETUP;
 339              		.loc 1 401 0
 340 024c 303095E5 		ldr	r3, [r5, #48]
 341 0250 0430C3E3 		bic	r3, r3, #4
 342 0254 303085E5 		str	r3, [r5, #48]
 343              	.L57:
 402:cdc_enumerate.c **** 	while ( (pUDP->UDP_CSR[0]  & AT91C_UDP_RXSETUP)  );
 344              		.loc 1 402 0
 345 0258 303095E5 		ldr	r3, [r5, #48]
 346 025c 040013E2 		ands	r0, r3, #4
 347 0260 9400001A 		bne	.L57
 403:cdc_enumerate.c **** 
 404:cdc_enumerate.c **** 	// Handle supported standard device request Cf Table 9-3 in USB specification Rev 1.1
 405:cdc_enumerate.c **** 	switch ((bRequest << 8) | bmRequestType) {
 348              		.loc 1 405 0
 349 0264 FF3007E2 		and	r3, r7, #255
 350 0268 034484E1 		orr	r4, r4, r3, asl #8
 351              	.LVL20:
 352 026c EC329FE5 		ldr	r3, .L126
 353 0270 030054E1 		cmp	r4, r3
 354 0274 4601000A 		beq	.L123
 355 0278 AC0000CA 		bgt	.L76
 356 027c 010C54E3 		cmp	r4, #256
 357 0280 4901000A 		beq	.L59
 358 0284 A70000CA 		bgt	.L77
 359 0288 810054E3 		cmp	r4, #129
 360 028c F300000A 		beq	.L61
 361 0290 820054E3 		cmp	r4, #130
 362 0294 F600000A 		beq	.L62
 363 0298 800054E3 		cmp	r4, #128
 364 029c 4901001A 		bne	.L59
 365 02a0 F00000EA 		b	.L60
 366              	.L77:
 367 02a4 B8329FE5 		ldr	r3, .L126+4
 368 02a8 030054E1 		cmp	r4, r3
 369 02ac 2201000A 		beq	.L65
 370 02b0 460100BA 		blt	.L123
 371 02b4 490100EA 		b	.L59
 372              	.L76:
 373 02b8 220D54E3 		cmp	r4, #2176
 374 02bc EC00000A 		beq	.L71
 375 02c0 B70000CA 		bgt	.L78
 376 02c4 050C54E3 		cmp	r4, #1280
 377 02c8 D600000A 		beq	.L69
 378 02cc 1A0D54E3 		cmp	r4, #1664
 379 02d0 C500000A 		beq	.L70
 380 02d4 8C329FE5 		ldr	r3, .L126+8
 381 02d8 030054E1 		cmp	r4, r3
 382 02dc 4901001A 		bne	.L59
 383 02e0 150100EA 		b	.L68
 384              	.L78:
 385 02e4 80329FE5 		ldr	r3, .L126+12
 386 02e8 030054E1 		cmp	r4, r3
 387 02ec 3801000A 		beq	.L116
 388 02f0 BE0000CA 		bgt	.L79
 389 02f4 090C54E3 		cmp	r4, #2304
 390 02f8 4901001A 		bne	.L59
 391 02fc DE0000EA 		b	.L72
 392              	.L79:
 393 0300 68329FE5 		ldr	r3, .L126+16
 394 0304 030054E1 		cmp	r4, r3
 395 0308 3F01000A 		beq	.L74
 396 030c 803083E2 		add	r3, r3, #128
 397 0310 030054E1 		cmp	r4, r3
 398 0314 4901001A 		bne	.L59
 399 0318 450100EA 		b	.L75
 400              	.L70:
 406:cdc_enumerate.c **** 	case STD_GET_DESCRIPTOR:
 407:cdc_enumerate.c **** 		if (wValue == 0x100)       // Return Device Descriptor
 401              		.loc 1 407 0
 402 031c 010C56E3 		cmp	r6, #256
 403 0320 CD00001A 		bne	.L80
 408:cdc_enumerate.c **** 			AT91F_USB_SendData(pUDP, devDescriptor, MIN(sizeof(devDescriptor), wLength));
 404              		.loc 1 408 0
 405 0324 120051E3 		cmp	r1, #18
 406 0328 0120A031 		movcc	r2, r1
 407 032c 1220A023 		movcs	r2, #18
 408              	.LVL21:
 409 0330 3C129FE5 		ldr	r1, .L126+20
 410              	.LVL22:
 411 0334 0500A0E1 		mov	r0, r5
 412              	.LVL23:
 413 0338 D40000EA 		b	.L122
 414              	.LVL24:
 415              	.L80:
 409:cdc_enumerate.c **** 		else if (wValue == 0x200)  // Return Configuration Descriptor
 416              		.loc 1 409 0
 417 033c 020C56E3 		cmp	r6, #512
 418 0340 4901001A 		bne	.L59
 410:cdc_enumerate.c **** 			AT91F_USB_SendData(pUDP, cfgDescriptor, MIN(sizeof(cfgDescriptor), wLength));
 419              		.loc 1 410 0
 420 0344 430051E3 		cmp	r1, #67
 421 0348 0120A031 		movcc	r2, r1
 422 034c 4320A023 		movcs	r2, #67
 423              	.LVL25:
 424 0350 20129FE5 		ldr	r1, .L126+24
 425              	.LVL26:
 426 0354 0500A0E1 		mov	r0, r5
 427              	.LVL27:
 428              	.L122:
 429 0358 0E0000EB 		bl	AT91F_USB_SendData
 430              	.LVL28:
 431 035c 520100EA 		b	.L51
 432              	.LVL29:
 433              	.L69:
 411:cdc_enumerate.c **** 		else
 412:cdc_enumerate.c **** 			AT91F_USB_SendStall(pUDP);
 413:cdc_enumerate.c **** 		break;
 414:cdc_enumerate.c **** 	case STD_SET_ADDRESS:
 415:cdc_enumerate.c **** 		AT91F_USB_SendZlp(pUDP);
 434              		.loc 1 415 0
 435 0360 0500A0E1 		mov	r0, r5
 436              	.LVL30:
 437 0364 FEFFFFEB 		bl	AT91F_USB_SendZlp
 438              	.LVL31:
 416:cdc_enumerate.c **** 		pUDP->UDP_FADDR = (AT91C_UDP_FEN | wValue);
 439              		.loc 1 416 0
 440 0368 002056E2 		subs	r2, r6, #0
 441 036c 0120A013 		movne	r2, #1
 442 0370 013C86E3 		orr	r3, r6, #256
 443 0374 083085E5 		str	r3, [r5, #8]
 417:cdc_enumerate.c **** 		pUDP->UDP_GLBSTATE  = (wValue) ? AT91C_UDP_FADDEN : 0;
 444              		.loc 1 417 0
 445 0378 042085E5 		str	r2, [r5, #4]
 446 037c 520100EA 		b	.L51
 447              	.LVL32:
 448              	.L72:
 418:cdc_enumerate.c **** 		break;
 419:cdc_enumerate.c **** 	case STD_SET_CONFIGURATION:
 420:cdc_enumerate.c **** 		pCdc->currentConfiguration = wValue;
 449              		.loc 1 420 0
 450 0380 0460C8E5 		strb	r6, [r8, #4]
 421:cdc_enumerate.c **** 		AT91F_USB_SendZlp(pUDP);
 451              		.loc 1 421 0
 452 0384 0500A0E1 		mov	r0, r5
 453              	.LVL33:
 454 0388 FEFFFFEB 		bl	AT91F_USB_SendZlp
 455              	.LVL34:
 422:cdc_enumerate.c **** 		pUDP->UDP_GLBSTATE  = (wValue) ? AT91C_UDP_CONFG : AT91C_UDP_FADDEN;
 456              		.loc 1 422 0
 457 038c 000056E3 		cmp	r6, #0
 458 0390 4C01000A 		beq	.L90
 459 0394 0230A0E3 		mov	r3, #2
 460 0398 043085E5 		str	r3, [r5, #4]
 423:cdc_enumerate.c **** 		pUDP->UDP_CSR[1] = (wValue) ? (AT91C_UDP_EPEDS | AT91C_UDP_EPTYPE_BULK_OUT) : 0;
 461              		.loc 1 423 0
 462 039c 823CA0E3 		mov	r3, #33280
 463 03a0 343085E5 		str	r3, [r5, #52]
 424:cdc_enumerate.c **** 		pUDP->UDP_CSR[2] = (wValue) ? (AT91C_UDP_EPEDS | AT91C_UDP_EPTYPE_BULK_IN)  : 0;
 464              		.loc 1 424 0
 465 03a4 013B83E2 		add	r3, r3, #1024
 466 03a8 383085E5 		str	r3, [r5, #56]
 467 03ac 872CA0E3 		mov	r2, #34560
 468              	.L92:
 425:cdc_enumerate.c **** 		pUDP->UDP_CSR[3] = (wValue) ? (AT91C_UDP_EPEDS | AT91C_UDP_EPTYPE_INT_IN)   : 0;
 469              		.loc 1 425 0
 470 03b0 3C2085E5 		str	r2, [r5, #60]
 471 03b4 520100EA 		b	.L51
 472              	.LVL35:
 473              	.L71:
 426:cdc_enumerate.c **** 		break;
 427:cdc_enumerate.c **** 	case STD_GET_CONFIGURATION:
 428:cdc_enumerate.c **** 		AT91F_USB_SendData(pUDP, (char *) &(pCdc->currentConfiguration), sizeof(pCdc->currentConfiguratio
 474              		.loc 1 428 0
 475 03b8 0500A0E1 		mov	r0, r5
 476              	.LVL36:
 477 03bc 041088E2 		add	r1, r8, #4
 478              	.LVL37:
 479 03c0 0120A0E3 		mov	r2, #1
 480              	.LVL38:
 481 03c4 D40000EA 		b	.L122
 482              	.LVL39:
 483              	.L60:
 429:cdc_enumerate.c **** 		break;
 430:cdc_enumerate.c **** 	case STD_GET_STATUS_ZERO:
 431:cdc_enumerate.c **** 		wStatus = 0;
 484              		.loc 1 431 0
 485 03c8 08108DE2 		add	r1, sp, #8
 486              	.LVL40:
 487 03cc 0030A0E3 		mov	r3, #0	@ movhi
 488 03d0 030100EA 		b	.L125
 489              	.LVL41:
 490              	.L61:
 432:cdc_enumerate.c **** 		AT91F_USB_SendData(pUDP, (char *) &wStatus, sizeof(wStatus));
 433:cdc_enumerate.c **** 		break;
 434:cdc_enumerate.c **** 	case STD_GET_STATUS_INTERFACE:
 435:cdc_enumerate.c **** 		wStatus = 0;
 491              		.loc 1 435 0
 492 03d4 08108DE2 		add	r1, sp, #8
 493              	.LVL42:
 494 03d8 B20061E1 		strh	r0, [r1, #-2]!	@ movhi
 495              	.LVL43:
 496 03dc 040100EA 		b	.L124
 497              	.LVL44:
 498              	.L62:
 436:cdc_enumerate.c **** 		AT91F_USB_SendData(pUDP, (char *) &wStatus, sizeof(wStatus));
 437:cdc_enumerate.c **** 		break;
 438:cdc_enumerate.c **** 	case STD_GET_STATUS_ENDPOINT:
 439:cdc_enumerate.c **** 		wStatus = 0;
 440:cdc_enumerate.c **** 		wIndex &= 0x0F;
 441:cdc_enumerate.c **** 		if ((pUDP->UDP_GLBSTATE & AT91C_UDP_CONFG) && (wIndex <= 3)) {
 499              		.loc 1 441 0
 500 03e0 043095E5 		ldr	r3, [r5, #4]
 501 03e4 020013E3 		tst	r3, #2
 502              		.loc 1 439 0
 503 03e8 B600CDE1 		strh	r0, [sp, #6]	@ movhi
 504              	.LVL45:
 505              		.loc 1 440 0
 506 03ec 0F2002E2 		and	r2, r2, #15
 507              	.LVL46:
 508              		.loc 1 441 0
 509 03f0 0701000A 		beq	.L93
 510 03f4 030052E3 		cmp	r2, #3
 511 03f8 0701008A 		bhi	.L93
 442:cdc_enumerate.c **** 			wStatus = (pUDP->UDP_CSR[wIndex] & AT91C_UDP_EPEDS) ? 0 : 1;
 512              		.loc 1 442 0
 513 03fc 023185E0 		add	r3, r5, r2, asl #2
 514 0400 303093E5 		ldr	r3, [r3, #48]
 515 0404 A337A0E1 		mov	r3, r3, lsr #15
 516 0408 013023E2 		eor	r3, r3, #1
 517 040c 013003E2 		and	r3, r3, #1
 518 0410 08108DE2 		add	r1, sp, #8
 519              	.LVL47:
 520              	.L125:
 521 0414 B23061E1 		strh	r3, [r1, #-2]!	@ movhi
 522              	.LVL48:
 523              	.L124:
 443:cdc_enumerate.c **** 			AT91F_USB_SendData(pUDP, (char *) &wStatus, sizeof(wStatus));
 524              		.loc 1 443 0
 525 0418 0500A0E1 		mov	r0, r5
 526              	.LVL49:
 527 041c 0220A0E3 		mov	r2, #2
 528              	.LVL50:
 529 0420 D40000EA 		b	.L122
 530              	.LVL51:
 531              	.L93:
 444:cdc_enumerate.c **** 		}
 445:cdc_enumerate.c **** 		else if ((pUDP->UDP_GLBSTATE & AT91C_UDP_FADDEN) && (wIndex == 0)) {
 532              		.loc 1 445 0
 533 0424 043095E5 		ldr	r3, [r5, #4]
 534 0428 010013E3 		tst	r3, #1
 535 042c 4901000A 		beq	.L59
 536 0430 000052E3 		cmp	r2, #0
 537 0434 4901001A 		bne	.L59
 446:cdc_enumerate.c **** 			wStatus = (pUDP->UDP_CSR[wIndex] & AT91C_UDP_EPEDS) ? 0 : 1;
 538              		.loc 1 446 0
 539 0438 303095E5 		ldr	r3, [r5, #48]
 540 043c A337A0E1 		mov	r3, r3, lsr #15
 541 0440 013023E2 		eor	r3, r3, #1
 542 0444 013003E2 		and	r3, r3, #1
 543 0448 08108DE2 		add	r1, sp, #8
 544              	.LVL52:
 545 044c B23061E1 		strh	r3, [r1, #-2]!	@ movhi
 447:cdc_enumerate.c **** 			AT91F_USB_SendData(pUDP, (char *) &wStatus, sizeof(wStatus));
 546              		.loc 1 447 0
 547 0450 0500A0E1 		mov	r0, r5
 548              	.LVL53:
 549 0454 022082E2 		add	r2, r2, #2
 550 0458 D40000EA 		b	.L122
 551              	.LVL54:
 552              	.L68:
 448:cdc_enumerate.c **** 		}
 449:cdc_enumerate.c **** 		else
 450:cdc_enumerate.c **** 			AT91F_USB_SendStall(pUDP);
 451:cdc_enumerate.c **** 		break;
 452:cdc_enumerate.c **** 	case STD_SET_FEATURE_ZERO:
 453:cdc_enumerate.c **** 		AT91F_USB_SendStall(pUDP);
 454:cdc_enumerate.c **** 	    break;
 455:cdc_enumerate.c **** 	case STD_SET_FEATURE_INTERFACE:
 456:cdc_enumerate.c **** 		AT91F_USB_SendZlp(pUDP);
 457:cdc_enumerate.c **** 		break;
 458:cdc_enumerate.c **** 	case STD_SET_FEATURE_ENDPOINT:
 459:cdc_enumerate.c **** 		wIndex &= 0x0F;
 460:cdc_enumerate.c **** 		if ((wValue == 0) && wIndex && (wIndex <= 3)) {
 553              		.loc 1 460 0
 554 045c 0F3012E2 		ands	r3, r2, #15
 555 0460 0130A013 		movne	r3, #1
 556 0464 000056E3 		cmp	r6, #0
 557 0468 0030A013 		movne	r3, #0
 558 046c 01300302 		andeq	r3, r3, #1
 559 0470 000053E3 		cmp	r3, #0
 560 0474 0F2002E2 		and	r2, r2, #15
 561              	.LVL55:
 562 0478 4901000A 		beq	.L59
 563 047c 030052E3 		cmp	r2, #3
 461:cdc_enumerate.c **** 			pUDP->UDP_CSR[wIndex] = 0;
 564              		.loc 1 461 0
 565 0480 02318590 		addls	r3, r5, r2, asl #2
 566 0484 30008395 		strls	r0, [r3, #48]
 567              		.loc 1 460 0
 568 0488 4601009A 		bls	.L123
 569 048c 490100EA 		b	.L59
 570              	.LVL56:
 571              	.L65:
 462:cdc_enumerate.c **** 			AT91F_USB_SendZlp(pUDP);
 463:cdc_enumerate.c **** 		}
 464:cdc_enumerate.c **** 		else
 465:cdc_enumerate.c **** 			AT91F_USB_SendStall(pUDP);
 466:cdc_enumerate.c **** 		break;
 467:cdc_enumerate.c **** 	case STD_CLEAR_FEATURE_ZERO:
 468:cdc_enumerate.c **** 		AT91F_USB_SendStall(pUDP);
 469:cdc_enumerate.c **** 	    break;
 470:cdc_enumerate.c **** 	case STD_CLEAR_FEATURE_INTERFACE:
 471:cdc_enumerate.c **** 		AT91F_USB_SendZlp(pUDP);
 472:cdc_enumerate.c **** 		break;
 473:cdc_enumerate.c **** 	case STD_CLEAR_FEATURE_ENDPOINT:
 474:cdc_enumerate.c **** 		wIndex &= 0x0F;
 475:cdc_enumerate.c **** 		if ((wValue == 0) && wIndex && (wIndex <= 3)) {
 572              		.loc 1 475 0
 573 0490 0F3012E2 		ands	r3, r2, #15
 574 0494 0130A013 		movne	r3, #1
 575 0498 000056E3 		cmp	r6, #0
 576 049c 0030A013 		movne	r3, #0
 577 04a0 01300302 		andeq	r3, r3, #1
 578 04a4 000053E3 		cmp	r3, #0
 579 04a8 0F2002E2 		and	r2, r2, #15
 580              	.LVL57:
 581 04ac 4901000A 		beq	.L59
 582 04b0 030052E3 		cmp	r2, #3
 583 04b4 4901008A 		bhi	.L59
 476:cdc_enumerate.c **** 			if (wIndex == 1)
 584              		.loc 1 476 0
 585 04b8 010052E3 		cmp	r2, #1
 477:cdc_enumerate.c **** 				pUDP->UDP_CSR[1] = (AT91C_UDP_EPEDS | AT91C_UDP_EPTYPE_BULK_OUT);
 586              		.loc 1 477 0
 587 04bc 823CA003 		moveq	r3, #33280
 588 04c0 34308505 		streq	r3, [r5, #52]
 589              		.loc 1 476 0
 590 04c4 4601000A 		beq	.L123
 478:cdc_enumerate.c **** 			else if (wIndex == 2)
 591              		.loc 1 478 0
 592 04c8 020052E3 		cmp	r2, #2
 479:cdc_enumerate.c **** 				pUDP->UDP_CSR[2] = (AT91C_UDP_EPEDS | AT91C_UDP_EPTYPE_BULK_IN);
 593              		.loc 1 479 0
 594 04cc 863CA003 		moveq	r3, #34304
 595 04d0 38308505 		streq	r3, [r5, #56]
 596              		.loc 1 478 0
 597 04d4 4601000A 		beq	.L123
 480:cdc_enumerate.c **** 			else if (wIndex == 3)
 598              		.loc 1 480 0
 599 04d8 030052E3 		cmp	r2, #3
 481:cdc_enumerate.c **** 				pUDP->UDP_CSR[3] = (AT91C_UDP_EPEDS | AT91C_UDP_EPTYPE_ISO_IN);
 600              		.loc 1 481 0
 601 04dc 853CA003 		moveq	r3, #34048
 602 04e0 3C308505 		streq	r3, [r5, #60]
 603 04e4 460100EA 		b	.L123
 604              	.LVL58:
 605              	.L116:
 482:cdc_enumerate.c **** 			AT91F_USB_SendZlp(pUDP);
 483:cdc_enumerate.c **** 		}
 484:cdc_enumerate.c **** 		else
 485:cdc_enumerate.c **** 			AT91F_USB_SendStall(pUDP);
 486:cdc_enumerate.c **** 		break;
 487:cdc_enumerate.c **** 
 488:cdc_enumerate.c **** 	// handle CDC class requests
 489:cdc_enumerate.c **** 	case SET_LINE_CODING:
 490:cdc_enumerate.c **** 		while ( !(pUDP->UDP_CSR[0] & AT91C_UDP_RX_DATA_BK0) );
 606              		.loc 1 490 0
 607 04e8 303095E5 		ldr	r3, [r5, #48]
 608 04ec 020013E3 		tst	r3, #2
 609 04f0 3801000A 		beq	.L116
 491:cdc_enumerate.c **** 		pUDP->UDP_CSR[0] &= ~(AT91C_UDP_RX_DATA_BK0);
 610              		.loc 1 491 0
 611 04f4 303095E5 		ldr	r3, [r5, #48]
 612 04f8 0230C3E3 		bic	r3, r3, #2
 613 04fc 303085E5 		str	r3, [r5, #48]
 614 0500 460100EA 		b	.L123
 615              	.L74:
 492:cdc_enumerate.c **** 		AT91F_USB_SendZlp(pUDP);
 493:cdc_enumerate.c **** 		break;
 494:cdc_enumerate.c **** 	case GET_LINE_CODING:
 495:cdc_enumerate.c **** 		AT91F_USB_SendData(pUDP, (char *) &line, MIN(sizeof(line), wLength));
 616              		.loc 1 495 0
 617 0504 080051E3 		cmp	r1, #8
 618 0508 0120A031 		movcc	r2, r1
 619 050c 0820A023 		movcs	r2, #8
 620              	.LVL59:
 621 0510 64109FE5 		ldr	r1, .L126+28
 622              	.LVL60:
 623 0514 0500A0E1 		mov	r0, r5
 624              	.LVL61:
 625 0518 D40000EA 		b	.L122
 626              	.LVL62:
 627              	.L75:
 496:cdc_enumerate.c **** 		break;
 497:cdc_enumerate.c **** 	case SET_CONTROL_LINE_STATE:
 498:cdc_enumerate.c **** 		pCdc->currentConnection = wValue;
 628              		.loc 1 498 0
 629 051c 0560C8E5 		strb	r6, [r8, #5]
 630              	.LVL63:
 631              	.L123:
 499:cdc_enumerate.c **** 		AT91F_USB_SendZlp(pUDP);
 632              		.loc 1 499 0
 633 0520 0500A0E1 		mov	r0, r5
 634              	.LVL64:
 635 0524 FEFFFFEB 		bl	AT91F_USB_SendZlp
 636              	.LVL65:
 637 0528 520100EA 		b	.L51
 638              	.LVL66:
 639              	.L59:
 500:cdc_enumerate.c **** 		break;
 501:cdc_enumerate.c **** 	default:
 502:cdc_enumerate.c **** 		AT91F_USB_SendStall(pUDP);
 640              		.loc 1 502 0
 641 052c 0500A0E1 		mov	r0, r5
 642              	.LVL67:
 643 0530 FEFFFFEB 		bl	AT91F_USB_SendStall
 644              	.LVL68:
 645 0534 520100EA 		b	.L51
 646              	.LVL69:
 647              	.L90:
 648              		.loc 1 422 0
 649 0538 0130A0E3 		mov	r3, #1
 650              		.loc 1 424 0
 651 053c 0620A0E1 		mov	r2, r6
 652              		.loc 1 422 0
 653 0540 043085E5 		str	r3, [r5, #4]
 654              		.loc 1 423 0
 655 0544 346085E5 		str	r6, [r5, #52]
 656              		.loc 1 424 0
 657 0548 386085E5 		str	r6, [r5, #56]
 658 054c EA0000EA 		b	.L92
 659              	.LVL70:
 660              	.L51:
 661              	.LBE5:
 662              	.LBE4:
 663              		.loc 1 233 0
 664 0550 0400D8E5 		ldrb	r0, [r8, #4]	@ zero_extendqisi2
 665 0554 08D08DE2 		add	sp, sp, #8
 666 0558 F041BDE8 		ldmfd	sp!, {r4, r5, r6, r7, r8, lr}
 667 055c 1EFF2FE1 		bx	lr
 668              	.L127:
 669              		.align	2
 670              	.L126:
 671 0560 01030000 		.word	769
 672 0564 02010000 		.word	258
 673 0568 02030000 		.word	770
 674 056c 21200000 		.word	8225
 675 0570 A1210000 		.word	8609
 676 0574 00000000 		.word	devDescriptor
 677 0578 00000000 		.word	cfgDescriptor
 678 057c 00000000 		.word	line
 679              	.LFE291:
 681              		.align	2
 683              	AT91F_UDP_Write:
 684              	.LFB293:
 685              		.loc 1 276 0
 686              		@ Function supports interworking.
 687              		@ args = 0, pretend = 0, frame = 0
 688              		@ frame_needed = 0, uses_anonymous_args = 0
 689              	.LVL71:
 690 0580 F0402DE9 		stmfd	sp!, {r4, r5, r6, r7, lr}
 691              	.LCFI4:
 692              		.loc 1 276 0
 693 0584 0070A0E1 		mov	r7, r0
 694              		.loc 1 277 0
 695 0588 004097E5 		ldr	r4, [r7, #0]
 696              	.LVL72:
 697              		.loc 1 281 0
 698 058c 400052E3 		cmp	r2, #64
 699 0590 0200A031 		movcc	r0, r2
 700 0594 4000A023 		movcs	r0, #64
 701              	.LVL73:
 702              		.loc 1 276 0
 703 0598 0160A0E1 		mov	r6, r1
 704              		.loc 1 281 0
 705 059c 0010A0E1 		mov	r1, r0
 706              	.LVL74:
 707 05a0 690100EA 		b	.L129
 708              	.L130:
 709              		.loc 1 283 0
 710 05a4 0130D6E4 		ldrb	r3, [r6], #1	@ zero_extendqisi2
 711 05a8 583084E5 		str	r3, [r4, #88]
 712              	.L129:
 713 05ac 011051E2 		subs	r1, r1, #1
 714 05b0 6701002A 		bcs	.L130
 715              		.loc 1 284 0
 716 05b4 383094E5 		ldr	r3, [r4, #56]
 717              		.loc 1 282 0
 718 05b8 025060E0 		rsb	r5, r0, r2
 719              	.LVL75:
 720 05bc 860100EA 		b	.L152
 721              	.LVL76:
 722              	.L133:
 723              		.loc 1 288 0
 724 05c0 400055E3 		cmp	r5, #64
 725 05c4 0520A031 		movcc	r2, r5
 726 05c8 4020A023 		movcs	r2, #64
 727              	.LVL77:
 728              		.loc 1 289 0
 729 05cc 055062E0 		rsb	r5, r2, r5
 730 05d0 750100EA 		b	.L134
 731              	.L135:
 732              		.loc 1 290 0
 733 05d4 0130D6E4 		ldrb	r3, [r6], #1	@ zero_extendqisi2
 734 05d8 583084E5 		str	r3, [r4, #88]
 735              	.L134:
 736 05dc 012052E2 		subs	r2, r2, #1
 737 05e0 7301002A 		bcs	.L135
 738 05e4 7B0100EA 		b	.L149
 739              	.LVL78:
 740              	.L137:
 741              		.loc 1 293 0
 742 05e8 580000EB 		bl	AT91F_UDP_IsConfigured
 743              	.LVL79:
 744 05ec 000050E3 		cmp	r0, #0
 745 05f0 9801000A 		beq	.L138
 746              	.LVL80:
 747              	.L149:
 748              		.loc 1 292 0
 749 05f4 383094E5 		ldr	r3, [r4, #56]
 750 05f8 010013E3 		tst	r3, #1
 751              		.loc 1 293 0
 752 05fc 0700A0E1 		mov	r0, r7
 753              	.LVL81:
 754              		.loc 1 292 0
 755 0600 7801000A 		beq	.L137
 756              	.LVL82:
 757              		.loc 1 294 0
 758 0604 383094E5 		ldr	r3, [r4, #56]
 759 0608 0130C3E3 		bic	r3, r3, #1
 760 060c 383084E5 		str	r3, [r4, #56]
 761              	.L140:
 762              		.loc 1 295 0
 763 0610 383094E5 		ldr	r3, [r4, #56]
 764 0614 010013E3 		tst	r3, #1
 765 0618 8201001A 		bne	.L140
 766              		.loc 1 296 0
 767 061c 383094E5 		ldr	r3, [r4, #56]
 768              	.LVL83:
 769              	.L152:
 770 0620 103083E3 		orr	r3, r3, #16
 771              		.loc 1 286 0
 772 0624 000055E3 		cmp	r5, #0
 773              		.loc 1 296 0
 774 0628 383084E5 		str	r3, [r4, #56]
 775              		.loc 1 286 0
 776 062c 6E01001A 		bne	.L133
 777 0630 8E0100EA 		b	.L151
 778              	.LVL84:
 779              	.L143:
 780              		.loc 1 300 0
 781 0634 580000EB 		bl	AT91F_UDP_IsConfigured
 782              	.LVL85:
 783 0638 000050E3 		cmp	r0, #0
 784 063c 9801000A 		beq	.L138
 785              	.LVL86:
 786              	.L151:
 787              		.loc 1 299 0
 788 0640 383094E5 		ldr	r3, [r4, #56]
 789 0644 010013E3 		tst	r3, #1
 790              		.loc 1 300 0
 791 0648 0700A0E1 		mov	r0, r7
 792              	.LVL87:
 793              		.loc 1 299 0
 794 064c 8B01000A 		beq	.L143
 795              	.LVL88:
 796              		.loc 1 301 0
 797 0650 383094E5 		ldr	r3, [r4, #56]
 798 0654 0130C3E3 		bic	r3, r3, #1
 799 0658 383084E5 		str	r3, [r4, #56]
 800              	.L145:
 801              		.loc 1 302 0
 802 065c 383094E5 		ldr	r3, [r4, #56]
 803 0660 010013E3 		tst	r3, #1
 804 0664 9501001A 		bne	.L145
 805              	.LVL89:
 806              	.L138:
 807              		.loc 1 305 0
 808 0668 0500A0E1 		mov	r0, r5
 809 066c F040BDE8 		ldmfd	sp!, {r4, r5, r6, r7, lr}
 810 0670 1EFF2FE1 		bx	lr
 811              	.LFE293:
 813              		.align	2
 815              	AT91F_UDP_Read:
 816              	.LFB292:
 817              		.loc 1 240 0
 818              		@ Function supports interworking.
 819              		@ args = 0, pretend = 0, frame = 0
 820              		@ frame_needed = 0, uses_anonymous_args = 0
 821              	.LVL90:
 822 0674 F0452DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, sl, lr}
 823              	.LCFI5:
 824              		.loc 1 241 0
 825 0678 005090E5 		ldr	r5, [r0, #0]
 826              	.LVL91:
 827              		.loc 1 242 0
 828 067c 086090E5 		ldr	r6, [r0, #8]
 829              	.LVL92:
 830              		.loc 1 240 0
 831 0680 0070A0E1 		mov	r7, r0
 832 0684 01A0A0E1 		mov	sl, r1
 833 0688 0240A0E1 		mov	r4, r2
 834              		.loc 1 242 0
 835 068c 0080A0E3 		mov	r8, #0
 836              	.LVL93:
 837 0690 C10100EA 		b	.L173
 838              	.LVL94:
 839              	.L155:
 840              		.loc 1 245 0
 841 0694 0700A0E1 		mov	r0, r7
 842 0698 580000EB 		bl	AT91F_UDP_IsConfigured
 843              	.LVL95:
 844 069c 000050E3 		cmp	r0, #0
 845 06a0 C301000A 		beq	.L156
 846              		.loc 1 247 0
 847 06a4 343095E5 		ldr	r3, [r5, #52]
 848 06a8 060013E1 		tst	r3, r6
 849 06ac C301000A 		beq	.L156
 850              		.loc 1 248 0
 851 06b0 343095E5 		ldr	r3, [r5, #52]
 852 06b4 230854E1 		cmp	r4, r3, lsr #16
 853 06b8 34309585 		ldrhi	r3, [r5, #52]
 854 06bc 0410A091 		movls	r1, r4
 855              	.LVL96:
 856 06c0 2318A081 		movhi	r1, r3, lsr #16
 857              		.loc 1 250 0
 858 06c4 3F0051E3 		cmp	r1, #63
 859 06c8 0040A093 		movls	r4, #0
 860              		.loc 1 249 0
 861 06cc 04406180 		rsbhi	r4, r1, r4
 862 06d0 08208AE0 		add	r2, sl, r8
 863 06d4 B70100EA 		b	.L165
 864              	.L166:
 865              		.loc 1 253 0
 866 06d8 543095E5 		ldr	r3, [r5, #84]
 867 06dc 013042E5 		strb	r3, [r2, #-1]
 868 06e0 018088E2 		add	r8, r8, #1
 869              	.L165:
 870              		.loc 1 252 0
 871 06e4 011041E2 		sub	r1, r1, #1
 872 06e8 010071E3 		cmn	r1, #1
 873 06ec 012082E2 		add	r2, r2, #1
 874 06f0 B401001A 		bne	.L166
 875              		.loc 1 254 0
 876 06f4 343095E5 		ldr	r3, [r5, #52]
 877 06f8 0630C3E1 		bic	r3, r3, r6
 878              		.loc 1 255 0
 879 06fc 020056E3 		cmp	r6, #2
 880              		.loc 1 254 0
 881 0700 343085E5 		str	r3, [r5, #52]
 882              		.loc 1 255 0
 883 0704 0260A013 		movne	r6, #2
 884 0708 4060A003 		moveq	r6, #64
 885              	.LVL97:
 886              	.L173:
 887              		.loc 1 244 0
 888 070c 000054E3 		cmp	r4, #0
 889 0710 A301001A 		bne	.L155
 890              	.L156:
 891              		.loc 1 269 0
 892 0714 0800A0E1 		mov	r0, r8
 893              		.loc 1 266 0
 894 0718 086087E5 		str	r6, [r7, #8]
 895              		.loc 1 269 0
 896 071c F045BDE8 		ldmfd	sp!, {r4, r5, r6, r7, r8, sl, lr}
 897 0720 1EFF2FE1 		bx	lr
 898              	.LFE292:
 900              		.global	devDescriptor
 901              		.section	.rodata
 904              	devDescriptor:
 905 0000 12       		.byte	18
 906 0001 01       		.byte	1
 907 0002 10       		.byte	16
 908 0003 01       		.byte	1
 909 0004 02       		.byte	2
 910 0005 00       		.byte	0
 911 0006 00       		.byte	0
 912 0007 08       		.byte	8
 913 0008 EB       		.byte	-21
 914 0009 03       		.byte	3
 915 000a 25       		.byte	37
 916 000b 61       		.byte	97
 917 000c 10       		.byte	16
 918 000d 01       		.byte	1
 919 000e 00       		.byte	0
 920 000f 00       		.byte	0
 921 0010 00       		.byte	0
 922 0011 01       		.byte	1
 923              		.global	cfgDescriptor
 926              	cfgDescriptor:
 927 0012 09       		.byte	9
 928 0013 02       		.byte	2
 929 0014 43       		.byte	67
 930 0015 00       		.byte	0
 931 0016 02       		.byte	2
 932 0017 01       		.byte	1
 933 0018 00       		.byte	0
 934 0019 C0       		.byte	-64
 935 001a 00       		.byte	0
 936 001b 09       		.byte	9
 937 001c 04       		.byte	4
 938 001d 00       		.byte	0
 939 001e 00       		.byte	0
 940 001f 01       		.byte	1
 941 0020 02       		.byte	2
 942 0021 02       		.byte	2
 943 0022 00       		.byte	0
 944 0023 00       		.byte	0
 945 0024 05       		.byte	5
 946 0025 24       		.byte	36
 947 0026 00       		.byte	0
 948 0027 10       		.byte	16
 949 0028 01       		.byte	1
 950 0029 04       		.byte	4
 951 002a 24       		.byte	36
 952 002b 02       		.byte	2
 953 002c 00       		.byte	0
 954 002d 05       		.byte	5
 955 002e 24       		.byte	36
 956 002f 06       		.byte	6
 957 0030 00       		.byte	0
 958 0031 01       		.byte	1
 959 0032 05       		.byte	5
 960 0033 24       		.byte	36
 961 0034 01       		.byte	1
 962 0035 00       		.byte	0
 963 0036 01       		.byte	1
 964 0037 07       		.byte	7
 965 0038 05       		.byte	5
 966 0039 83       		.byte	-125
 967 003a 03       		.byte	3
 968 003b 08       		.byte	8
 969 003c 00       		.byte	0
 970 003d FF       		.byte	-1
 971 003e 09       		.byte	9
 972 003f 04       		.byte	4
 973 0040 01       		.byte	1
 974 0041 00       		.byte	0
 975 0042 02       		.byte	2
 976 0043 0A       		.byte	10
 977 0044 00       		.byte	0
 978 0045 00       		.byte	0
 979 0046 00       		.byte	0
 980 0047 07       		.byte	7
 981 0048 05       		.byte	5
 982 0049 01       		.byte	1
 983 004a 02       		.byte	2
 984 004b 40       		.byte	64
 985 004c 00       		.byte	0
 986 004d 00       		.byte	0
 987 004e 07       		.byte	7
 988 004f 05       		.byte	5
 989 0050 82       		.byte	-126
 990 0051 02       		.byte	2
 991 0052 40       		.byte	64
 992 0053 00       		.byte	0
 993 0054 00       		.byte	0
 994              		.global	line
 995              		.data
 996              		.align	2
 999              	line:
 1000 0000 00C20100 		.word	115200
 1001 0004 00       		.byte	0
 1002 0005 00       		.byte	0
 1003 0006 08       		.byte	8
 1004 0007 00       		.space	1
 1005              		.global	csrIdx
 1006              		.bss
 1009              	csrIdx:
 1010 0000 00       		.space	1
 1011              		.comm	csrTab,400,4
 1148              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 cdc_enumerate.c
     /tmp/cc8NWbhG.s:13     .text:00000000 AT91F_CDC_Open
     /tmp/cc8NWbhG.s:23     .text:00000000 $a
     /tmp/cc8NWbhG.s:51     .text:00000034 $d
     /tmp/cc8NWbhG.s:815    .text:00000674 AT91F_UDP_Read
     /tmp/cc8NWbhG.s:215    .text:00000168 AT91F_UDP_IsConfigured
     /tmp/cc8NWbhG.s:683    .text:00000580 AT91F_UDP_Write
     /tmp/cc8NWbhG.s:58     .text:00000040 AT91F_USB_SendData
     /tmp/cc8NWbhG.s:65     .text:00000040 $a
     /tmp/cc8NWbhG.s:146    .text:00000100 AT91F_USB_SendZlp
     /tmp/cc8NWbhG.s:181    .text:00000134 AT91F_USB_SendStall
     /tmp/cc8NWbhG.s:671    .text:00000560 $d
     /tmp/cc8NWbhG.s:904    .rodata:00000000 devDescriptor
     /tmp/cc8NWbhG.s:926    .rodata:00000012 cfgDescriptor
     /tmp/cc8NWbhG.s:999    .data:00000000 line
     /tmp/cc8NWbhG.s:690    .text:00000580 $a
     /tmp/cc8NWbhG.s:1000   .data:00000000 $d
     /tmp/cc8NWbhG.s:1009   .bss:00000000 csrIdx
                            *COM*:00000190 csrTab

NO UNDEFINED SYMBOLS
